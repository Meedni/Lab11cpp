<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACAAZMDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoqGW6ggkjjkmjjkkOEVm
        ALfQd6loAWikps0qwQvLIdqIpZmPYDqaAH0VnaDr+n+KNKt9T0q7jvrC4XdFcRcq49RVPxh420bwHpcd
        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
        FFFFABTJQ5jcRkCTB2lhkA9qfRQB4gnwI8Tr8SNF8aHxsw1NZJF1iNbbEd3bbf3UEI3fulVuc/MTk+vH
        pPj/AMN6t4s0MabpWuz+HPOlUXN7Zj/SRD/EImPCOePmwcc8V01FAHD+E/gz4U8H6qmsW+n/AG7xCIRA
        +uagfOvZEBztaUjJGST9TWB8XPg7qvjnx14E8XeH9ei0LWvDM1wha5tzcRzWtwqpcIFDDbIVX5X52nnB
        GQfV6KAPK/2d/grc/Avwjquh3HiC48Qrd6vd6lHNcLho1mlLhD6kZ5buea9UoooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP/Z
</value>
  </data>
</root>